/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.33
 * Generated at: 2020-04-08 19:15:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class ShowAppointment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\r\n");
      out.write("        crossorigin=\"anonymous\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"style.css\">\r\n");
      out.write("    <title>Your Appointment</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <nav nav class=\"navbar navbar-expand-lg navbar-light\">\r\n");
      out.write("        <span style=\"margin-left:2%;\">\r\n");
      out.write("            <a class=\"navbar-brand\" style=\"text-align: center\" href=\"#\">\r\n");
      out.write("                <img src=\"heart.svg\" width=\"30\" height=\"30\" alt=\"Appolo\"> Appolo\r\n");
      out.write("            </a>\r\n");
      out.write("        </span>\r\n");
      out.write("        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\"\r\n");
      out.write("            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n");
      out.write("            <span style=\"margin-left:84%;\">\r\n");
      out.write("                <div class=\"navbar-nav ml-auto\">\r\n");
      out.write("                    <a class=\"nav-item nav-link\" href=\"AfterLogin.jsp\">Home</a>\r\n");
      out.write("                    <a class=\"nav-item nav-link\"  href = \"Logout.jsp\">Signout</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </span>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("    ");

		try{
			RequestDispatcher rd;
			Class.forName("com.mysql.jdbc.Driver");
			Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/hospital","root","root");
			String query = "select slots from doctors where docid = ?";
			PreparedStatement ps = con.prepareStatement(query);
			ps.setString(1, request.getParameter("docid")); 
			ResultSet rs = ps.executeQuery();
			int slots = 0;
			while(rs.next()){
				slots = rs.getInt(1); 
				break;
			}
			if(slots==0){
				slots = 0;
			}else{
				slots -= 1;
			}
			
		   
			query = "update doctors set slots = ? where docid = ?";
			ps = con.prepareStatement(query);
			ps.setString(1, String.valueOf(slots));
			ps.setString(2, request.getParameter("docid"));
			ps.executeUpdate();
			
			query = "insert into appointments values (?,?,?,?)";
			ps = con.prepareStatement(query);
			ps.setString(1,request.getParameter("dname"));
			ps.setString(2, request.getParameter("pname"));
			ps.setString(3, request.getParameter("date"));
			ps.setString(4, request.getParameter("time"));
			ps.executeUpdate();
		
		
	
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"jumbotron\" style=\"margin-top:8%\">\r\n");
      out.write("        \t<h2>Your Appointment</h2><br>\r\n");
      out.write("        \t<hr>\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("            \t<span><p>Doctor : ");
      out.print( request.getParameter("dname") );
      out.write(" </p></span>\r\n");
      out.write("            \t<span><p>Patient : ");
      out.print( request.getParameter("pname") );
      out.write(" </p></span>\r\n");
      out.write("            \t<span><p>Date : ");
      out.print( request.getParameter("date") );
      out.write(" </p></span>\r\n");
      out.write("            \t<span><p>Timings : ");
      out.print( request.getParameter("time") );
      out.write(" </p></span>\r\n");
      out.write("            </div>\r\n");
      out.write("            <hr>\r\n");
      out.write("            <br>\r\n");
      out.write("            <button type=\"submit\" class=\"btn btn-primary\">Print</button>\r\n");
      out.write("          <br><br>\r\n");
      out.write("            <hr>\r\n");
      out.write("            <br>\r\n");
      out.write("            <h2>Appointments</h2><br><br>\r\n");
      out.write("            \t<table border=\"1\" width=\"800\" align=\"center\">\r\n");
      out.write("                    <tr bgcolor=\"00FF7F\">\r\n");
      out.write("                    \t<th><b>DOCTOR</b></th>\r\n");
      out.write("                        <th><b>PATIENT</b></th>\r\n");
      out.write("                        <th><b>DATE</b></th>\r\n");
      out.write("                        <th><b>TIME</b></th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("            \t\r\n");
      out.write("            ");
	
            	
	            	
	           		 query = "select * from appointments";
			         ps = con.prepareStatement(query);	        	
			         rs=ps.executeQuery();
			         while(rs.next()){
		        	
            
      out.write("\r\n");
      out.write("\r\n");
      out.write("            \t <tr>\r\n");
      out.write("\t\t\t     \t<td>");
      out.print( rs.getString(1) );
      out.write("</td>\r\n");
      out.write("\t\t\t     \t<td>");
      out.print( rs.getString(2) );
      out.write("</td>\r\n");
      out.write("\t\t\t     \t<td>");
      out.print( rs.getString(3) );
      out.write("</td>\r\n");
      out.write("\t\t\t     \t<td>");
      out.print( rs.getString(4) );
      out.write("</td>\t\t     \t\r\n");
      out.write("     \t\t\t</tr>\r\n");
      out.write("            ");

		         }
			         }catch(Exception e) {
		 			System.out.println(e);
					
		 		}
     
            
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            </table>\r\n");
      out.write("         </div>\r\n");
      out.write("         \r\n");
      out.write("     </div>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("    \r\n");
      out.write("     <script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\"\r\n");
      out.write("        crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\"\r\n");
      out.write("        crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\"\r\n");
      out.write("        crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
